<% scopes_hash = @product_group.scopes_to_hash %>
<% order_scope = scopes_hash.keys.select{|s| Scopes::Product::ORDERING.include?(s)}.last %>
<fieldset>
  <legend><%= t(:product_group) %></legend>
  <% f.field_container :name do %>
    <%= f.label :name, t("name") %>
    <%= f.text_field :name %>
    <%= f.error_message_on :name %>
  <% end %>

  <% f.field_container :order_scope do %>
    <%= f.label :order_scope, t("order") %>
    <%= select_tag("order_scope", options_for_select(
            Scopes::Product::ORDERING.collect{|p| [ t(:name, :scope =>[:product_scopes, :scopes, p]), p ] }, order_scope
    )) %>
  <% end %>
</fieldset>

<div class="product-scopes">
  <% [:search, :taxon, :price, :values].each do |group_name| %>
    <% scopes = Scopes::Product::SCOPES[group_name] %>
    <fieldset>
      <legend><%= t(:name, :scope => [:product_scopes, :groups, group_name]) %></legend>
      <% unless t(:description, :scope => [:product_scopes, :groups, group_name], :default => "").blank? %>
        <p><%= t(:description, :scope => [:product_scopes, :groups, group_name]) %></p>
      <% end %>

      <ul>
        <% scopes.each_pair do |scope_name, arguments| %>
          <li>
            <%= check_box_tag("product_scope[#{scope_name}][active]", "1", scopes_hash[scope_name.to_s]) %>
            <%= label_tag("product_scope[#{scope_name}][active]", t(:name, :scope => [:product_scopes, :scopes, scope_name])) %>
            <br />
            <% arguments.each_with_index do |arg_name, i| %>
              <div class="scope-argument">
                <%= label_tag("product_scope[#{scope_name}][arguments][]", t(arg_name, :scope => [:product_scopes, :scopes, scope_name, :args])) %>
                <br />
                <%= text_field_tag("product_scope[#{scope_name}][arguments][]", scopes_hash[scope_name.to_s] && scopes_hash[scope_name.to_s][i]) %>
              </div>
            <% end %>
            <% unless t(:description, :scope => [:product_scopes, :scopes, scope_name], :default => "").blank? %>
              <p><%= t(:description, :scope => [:product_scopes, :scopes, scope_name], :default => "") %></p>
            <% end %>
          </li>
        <% end %>
        <li style="clear: both; list-style: none;"></li>
      </ul>
    </fieldset>
  <% end %>
</div>
<fieldset>
  <legend><%= t(:preview) %></legend>
  <div id="products-preview">

  </div>
</fieldset>

<%= button t("preview"), nil, "submit", :id => "preview"  %>

<% javascript_tag do %>
  
    jQuery("#preview").click(function(){
    
      jQuery.ajax({
        data: $("#product-group-form :input[name!='_method']").serialize(), 
        success: function(request){
          jQuery('#products-preview').html(request);
        }, 
        type: 'post', 
        url: '/admin/product_groups/preview'
      });
      
      return(false)
    });
 
<% end %>