= render :partial => 'admin/shared/product_sub_menu'
= render :partial => 'admin/shared/product_tabs', :locals => {:current => "Product Properties"}
= error_messages_for :product
- form_for(:product, :url => admin_product_url(@product), :html => { :method => :put }) do |f|
  %table.index
    %thead
      %tr
        %th= t("property")
        %th= t("value")
        %th= t("action")
    %tbody#product_properties
      = f.render_associated_form(@product.product_properties)
      %tr#none
        %td{:colspan => "3"}= @product.product_properties.empty? ? "#{t("none")}." : ""
  %input{:name => "clear_product_properties", :type => "hidden", :value => "true"}/
  %p
    - link_text = icon('add') + ' ' + t("add_product_properties")
    - link_html_opts = {:onclick => "jQuery('#none').hide();", :class => 'iconlink'}
    = f.add_associated_link(link_text, @product.product_properties.build, link_html_opts)
    \&nbsp;&nbsp;
    %span#new_ptype_link
      = link_to_remote t("select_from_prototype"), :url => available_admin_prototypes_url, :method => :get, :update => "prototypes"
  #prototypes
  = image_tag "spinner.gif", :plugin=>"spree", :style => "display:none", :id => 'busy_indicator'
  %br/
  = render :partial => 'admin/shared/edit_resource_links'
:javascript
  var properties = "#{@properties}".split(' ');
  $("a.product_property_remove_link").live("click", function(){
    jQuery(this).parents('.product_property').remove();
    return false;
  });
  $("#product_properties input.autocomplete").live("keydown", function(){
    already_auto_completed = $(this).is('ac_input');
    if (!already_auto_completed) {
      $(this).autocomplete(properties);
      $(this).focus();
    }
  });